---
    - name: Debug
      debug:
        var: nameips
      tags:
        - debug

    - name: Debug
      debug:
        var: nameips["{{ inventory_hostname.split('.')[0].split('-')[2] }}"]
      tags:
        - debug

    - name: Stop linux mgmt vms in the lab
      vmware_guest_mod:
        validate_certs: False
        hostname: "{{ mgmt_vcenter }}"
        username: "{{ mgmt_vcenter_user }}"
        password: "{{ mgmt_vcenter_password }}"
        cluster: "{{ mgmt_datacenter }}"
        name: "{{ inventory_hostname.split('.')[0] }}"
        state: poweredoff
        datacenter: "{{ mgmt_datacenter }}"
        networks: "{{ lab_networks }}"
        template: "{{ linux_template }}"
      ignore_errors: True
      delegate_to: localhost
      tags:
        #- clean_up
        - stop
        - stop_linux
        #- delete
        #- delete_linux
        #- deploy_linux
        #- deploy_all

    - name: Delete all the mgmt vms in the lab
      vmware_guest_mod:
        validate_certs: False
        hostname: "{{ mgmt_vcenter }}"
        username: "{{ mgmt_vcenter_user }}"
        password: "{{ mgmt_vcenter_password }}"
        cluster: "{{ mgmt_datacenter }}"
        name: "{{ inventory_hostname.split('.')[0] }}"
        state: absent
        datacenter: "{{ mgmt_datacenter }}"
        template: "{{ linux_template }}"
      ignore_errors: True
      delegate_to: localhost
      tags:
        - clean_up
        - delete_linux
        #- deploy_all
        #- deploy_linux


    - name: deploy the linux server vms
      vmware_guest_mod:
        validate_certs: False
        hostname: "{{ mgmt_vcenter }}"
        username: "{{ mgmt_vcenter_user }}"
        password: "{{ mgmt_vcenter_password }}"
        cluster: "{{ mgmt_cluster }}"
        domain: "{{ domain }}"
        name: "{{ inventory_hostname.split('.')[0] }}"
        state: poweredon
        template: "{{ linux_template }}"
        datacenter: "{{ mgmt_datacenter }}"
        customize: True
        dns_servers: "{{ dns_servers }}"
        #ips: "{{ lookup('dig', inventory_hostname) }}"
        ips: "{{ nameips[ inventory_hostname.split('.')[0].split('-')[2] ] }}"
        networks: "{{ lab_networks }}"
        wait_for_ip_address: True
        #folder: "{{ folder }}"
        #resource_pool: "LL{{lab_number}}"
      delegate_to: localhost
      ignore_errors: True
      register: deployedvm
      tags:
        - deploy_all
        - deploy_linux
        - start

    - name: Show information about deployed vms
      debug:
        var: deployedvm
      tags:
        - deploy_all
        - deploy_linux

    - name: Show information about deployed vms
      debug:
        var: deployedvm.instance.hw_name
      tags:
        - deploy_all
        - deploy_linux

    - name: Double check info about VM anyway
      vmware_guest_mod:
        validate_certs: False
        hostname: "{{ mgmt_vcenter }}"
        username: "{{ mgmt_vcenter_user }}"
        password: "{{ mgmt_vcenter_password }}"
        cluster: "{{ mgmt_cluster }}"
        domain: "{{ domain }}"
        name: "{{ inventory_hostname.split('.')[0] }}"
      delegate_to: localhost
      ignore_errors: True
      register: deployedvm
      tags:
        - deploy_all
        - deploy_linux
        - start

    - name: Show information about deployed vms
      debug:
        var: deployedvm
      tags:
        - deploy_all
        - deploy_linux

    - name: Add DNS VM to dns group to be used by postinstall role
      #when: (deployedvm.changed == True) and ('"dns1" in deployedvm.instance.hw_name')
      when: '"dns1" in deployedvm.instance.hw_name'
      add_host:
        hostname: "{{deployedvm.instance.ipv4 }}"
        ansible_host: "{{ deployedvm.instance.ipv4 }}"
        name: "{{ deployedvm.instance.ipv4 }}"
        groups: 
            - dnsgroup
            - global
            - dns
      tags:
        - deploy_all
        - deploy_linux

    - name: Add cpman VM to cpman group to be used by postinstall role
      #when: (deployedvm.changed == True) and ('"cpman1" in deployedvm.instance.hw_name')
      when: '"cpman1" in deployedvm.instance.hw_name'
      add_host:
        hostname: "{{deployedvm.instance.ipv4 }}"
        ansible_host: "{{ deployedvm.instance.ipv4 }}"
        name: "{{ deployedvm.instance.ipv4 }}"
        groups: 
            - cpmangroup
            - global
            - cpman
      tags:
        - deploy_all
        - deploy_linux

    - name: Add db VM to mydns group to be used by postinstall role
      when: '"db1" in deployedvm.instance.hw_name'
      add_host:
        hostname: "{{deployedvm.instance.hw_name }}"
        ansible_host: "{{ deployedvm.instance.ipv4 }}"
        name: "{{ deployedvm.instance.ipv4 }}"
        groups: 
            - dbgroup
            - global
            - db
      tags:
        - deploy_all
        - deploy_linux
